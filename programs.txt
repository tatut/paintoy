setxy 145 50 setang 0

def eye() {
  saveang a
  setang 330
  repeat 2 [ repeat 20 [ fd 1 rt 3 ] rt 120 ]
  setang :a
}

def hair() {
 /* random hair */
  repeat 40 [
    setxy :tx :ty
    setang rnd 0 180
    repeat rnd 7 12 [ fd 4 rt rnd -15 15 ]
  ]
}

def face() {
  savexy tx ty // save top of head position
  repeat 36 [fd 10 rt 10]
  rt 90 pu fd 50 rt 90 fd 20 rt 180
  pd eye()
  pu fd 35
  pd eye()
  pu bk 10 rt 90 fd 10
  pd rt 15 fd 20 rt -105 fd 5 // nose
  pu fd 20 rt 90 fd 5
  pd
  rt 40 repeat 50 [ fd 1 rt 2] // mouth
  hair()
}

face()


################

perspective road:

def linexyz(sx sy sz ex ey ez) {
  setxy 160-((160-:sx)/(:sz*0.1)) 100-((100-:sy)/(:sz*0.1))
  line  160-((160-:ex)/(:ez*0.1)) 100-((100-:ey)/(:ez*0.1))
}

def linexyz(sx sy sz ex ey ez) {
  setxy 160-((160-:sx)/(:sz*0.1)) 100-((100-:sy)/(:sz*0.1))
  line  160-((160-:ex)/(:ez*0.1)) 100-((100-:ey)/(:ez*0.1))
}

def road() {
  linexyz(80 200 10 80 200 1000)
  linexyz(240 200 10 240 200 1000)
  for [z 10 100 8] [
    linexyz(156 200 :z 156 200 :z+4)
    linexyz(156 200 :z+4 164 200 :z+4)
    linexyz(164 200 :z+4 164 200 :z)
    linexyz(156 200 :z 164 200 :z)
  ]
}

pen 0
road()

def housel(x y z w h d) {
  linexyz(:x+:w :y    :z    :x+:w :y-:h :z)
  linexyz(:x+:w :y-:h :z    :x    :y-:h :z)
  linexyz(:x    :y-:h :z    :x    :y    :z)
  linexyz(:x    :y    :z    :x+:w :y    :z)
  linexyz(:x+:w :y    :z    :x+:w :y    :z+:d)
  linexyz(:x+:w :y    :z+:d :x+:w :y-:h :z+:d)
  linexyz(:x+:w :y-:h :z+:d :x+:w :y-:h :z)
  linexyz(:x    :y-:h :z    :x    :y-:h :z+:d)
  linexyz(:x    :y-:h :z+:d :x+:w :y-:h :z+:d)
}


housel(35 200 10 30 25 4)

housel(35 200 19 30 45 5)

def linexyz(sx sy sz ex ey ez) {
  setxy 160-((160-:sx)/(:sz*0.1)) 100-((100-:sy)/(:sz*0.1))
  line  160-((160-:ex)/(:ez*0.1)) 100-((100-:ey)/(:ez*0.1))
}

/* draw some tree */
def tree(x y z) {
  pen 4 // draw trunk with brown
  linexyz(:x :y :z :x :y-rnd 10 15 :z)
  pen b // draw leafy branches with green
  savexy ax ay
  repeat 5 [
    setang rnd 240 290
    fd (100-:z)*0.07
    setxy :ax :ay
  ]
}

/* draw a lovely random forest  */
for [z 10 80 3] [
  repeat rnd 1 6 [
    tree(250 + rnd 5 60
         180 + rnd 0 20
         :z)
  ]
]

/* horizon line */
pen 6
setxy 0 100
setang 0 fd 320

/* mountain range */
pen 5
setxy 0 85
repeat 11 [
  setang 0
  repeat 6 [ setang rnd 278 350 fd 4 ]
  repeat 6 [ setang rnd 10 80 fd 4 ]
]

/* sun */
pen a
setxy 250 20
setang 0

fill [ repeat 35 [ fd 2 rt 10 ] ]
repeat rnd 5 25 [
  setxy 250 30
  setang rnd 0 360
  fd 20
]



############### letters


def a(s) {
  rt -90 fd :s
  rt 90 fd :s/2
  rt 90 fd :s/2
  rt 90 fd :s/2 bk :s/2 rt -90 fd :s/2
  rt -90  }

def h(s) {
  rt -90 fd :s bk :s/2 rt 90 fd :s/2 rt -90 fd :s/2 rt 180
  fd :s rt -90
}

def e(s) {
  rt -90 fd :s rt 90
  repeat 2 [ fd :s/2 bk :s/2 rt 90 fd :s/2 rt -90 ]
  fd :s/2
}

def l(s) { rt -90 fd :s bk :s rt 90 fd :s/2 }
def o(s) { pu fd :s/2 rt 180 pd fd :s/2 rt 90 fd :s rt 90 fd :s/2 rt 90 fd :s rt -90 }
def t(s) { pu fd :s/2 pd rt -90 fd :s rt -90 pu fd :s/2 rt 180 pd fd :s rt 90 pu fd :s rt -90 pd }

def r(s) {
  pu fd :s/2 savexy rx ry bk :s/2 pd
  saveang ra
  rt -90 fd :s
  repeat 3 [ rt 90 fd :s/2 ]
  line :rx :ry
  setang :ra
}


/* underscore for space and spacing */
def _(s) { pu fd :s/2 pd }

setxy 160 70
setang 330
for [ s 5 25 4 ] [
  for [ c "hello_there" ] [ &c(:s) _(:s) rt 14 ]
  pu fd :s fd :s pd
]
